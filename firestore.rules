rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para beneficios
    match /beneficios/{beneficioId} {
      // Lectura: socios pueden ver beneficios activos de su asociaci贸n
      allow read: if request.auth != null && (
        // Socios pueden ver beneficios activos de su asociaci贸n
        (resource.data.estado == 'activo' && 
         request.auth.token.role == 'socio' && 
         request.auth.token.asociacionId in resource.data.asociacionesDisponibles) ||
        // Comercios pueden ver sus propios beneficios
        (request.auth.token.role == 'comercio' && 
         request.auth.uid == resource.data.comercioId) ||
        // Asociaciones pueden ver beneficios de su red
        (request.auth.token.role == 'asociacion' && 
         request.auth.uid in resource.data.asociacionesDisponibles)
      );
      
      // Escritura: solo comercios pueden crear/editar sus beneficios
      allow create: if request.auth != null && 
        request.auth.token.role == 'comercio' &&
        request.auth.uid == request.resource.data.comercioId &&
        request.resource.data.keys().hasAll(['titulo', 'descripcion', 'tipo', 'descuento', 'comercioId', 'estado', 'creadoEn', 'actualizadoEn']);
      
      allow update: if request.auth != null && 
        request.auth.token.role == 'comercio' &&
        request.auth.uid == resource.data.comercioId &&
        request.resource.data.comercioId == resource.data.comercioId; // No cambiar el comercio
      
      // Eliminaci贸n: solo el comercio propietario
      allow delete: if request.auth != null && 
        request.auth.token.role == 'comercio' &&
        request.auth.uid == resource.data.comercioId;
    }
    
    // Reglas para usos de beneficios
    match /beneficio_usos/{usoId} {
      // Lectura: socios pueden ver sus propios usos, comercios los de sus beneficios
      allow read: if request.auth != null && (
        (request.auth.token.role == 'socio' && 
         request.auth.uid == resource.data.socioId) ||
        (request.auth.token.role == 'comercio' && 
         request.auth.uid == resource.data.comercioId) ||
        (request.auth.token.role == 'asociacion' && 
         request.auth.uid == resource.data.asociacionId)
      );
      
      // Escritura: solo socios pueden crear usos
      allow create: if request.auth != null && 
        request.auth.token.role == 'socio' &&
        request.auth.uid == request.resource.data.socioId &&
        request.resource.data.keys().hasAll(['beneficioId', 'socioId', 'comercioId', 'asociacionId', 'fechaUso', 'estado', 'creadoEn']);
      
      // Actualizaci贸n: comercios pueden validar usos
      allow update: if request.auth != null && (
        (request.auth.token.role == 'comercio' && 
         request.auth.uid == resource.data.comercioId) ||
        (request.auth.token.role == 'socio' && 
         request.auth.uid == resource.data.socioId)
      );
    }
    
    // Reglas para validaciones de beneficios
    match /beneficio_validaciones/{validacionId} {
      allow read, write: if request.auth != null && (
        request.auth.token.role == 'comercio' ||
        request.auth.token.role == 'socio'
      );
    }
    
    // Reglas para usuarios (necesarias para obtener datos de perfil)
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reglas para comercios
    match /comercios/{comercioId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == comercioId;
    }
    
    // Reglas para asociaciones
    match /asociaciones/{asociacionId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == asociacionId;
    }
    
    // Reglas para socios
    match /socios/{socioId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == socioId;
    }
  }
}
